name: Rust

on:
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.1.0
      with:
        node-version: "20"
    - uses: jetli/wasm-pack-action@v0.4.0
      with:
        # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
        version: 'v0.13.1'
    - name: Build rt
      working-directory: ./rt
      run: cargo build
    - name: Test rt
      working-directory: ./rt
      run: cargo test
    - name: Build wasm
      working-directory: ./wasm-rt
      run: npm run build
    - name: Copy to dist
      working-directory: ./wasm-rt
      run: |
        mkdir dist
        cp -r pkg dist/pkg
        cp index.mjs dist
        cp worker.mjs dist
        cp index.html dist
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload dist
        path: 'wasm-rt/dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
